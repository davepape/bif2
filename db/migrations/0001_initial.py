# Generated by Django 2.0.1 on 2018-01-25 19:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entityType', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('entity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='db.Entity')),
                ('name', models.CharField(max_length=256)),
                ('description', models.TextField()),
            ],
            bases=('db.entity',),
        ),
        migrations.CreateModel(
            name='BIFUser',
            fields=[
                ('entity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='db.Entity')),
                ('phone', models.CharField(max_length=256)),
                ('snailmail', models.TextField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            bases=('db.entity',),
        ),
        migrations.CreateModel(
            name='FestivalInfo',
            fields=[
                ('entity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='db.Entity')),
                ('name', models.CharField(max_length=256)),
                ('description', models.TextField()),
                ('startDate', models.DateField()),
                ('numberOfDays', models.IntegerField(default=1)),
            ],
            bases=('db.entity',),
        ),
        migrations.CreateModel(
            name='Listing',
            fields=[
                ('entity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='db.Entity')),
                ('venuenote', models.CharField(default='', max_length=256)),
                ('date', models.DateField()),
                ('starttime', models.IntegerField()),
                ('endtime', models.IntegerField()),
                ('installation', models.BooleanField(default=False)),
                ('listingnote', models.TextField(default='')),
                ('cancelled', models.BooleanField(default=False)),
            ],
            bases=('db.entity',),
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('entity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='db.Entity')),
                ('notetext', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now=True)),
            ],
            bases=('db.entity',),
        ),
        migrations.CreateModel(
            name='Proposal',
            fields=[
                ('entity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='db.Entity')),
                ('title', models.CharField(max_length=256)),
                ('status', models.IntegerField(choices=[(0, 'waiting'), (1, 'accepted'), (2, 'deleted')], default=0)),
                ('info', models.TextField()),
                ('festival', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='db.FestivalInfo')),
            ],
            bases=('db.entity',),
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('entity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='db.Entity')),
                ('name', models.CharField(max_length=256)),
                ('status', models.IntegerField(choices=[(0, 'waiting'), (1, 'accepted'), (2, 'deleted')], default=0)),
                ('info', models.TextField()),
                ('festival', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='db.FestivalInfo')),
            ],
            bases=('db.entity',),
        ),
        migrations.AddField(
            model_name='note',
            name='attachedTo',
            field=models.ManyToManyField(related_name='notes', to='db.Entity'),
        ),
        migrations.AddField(
            model_name='note',
            name='creator',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='db.BIFUser'),
        ),
        migrations.AddField(
            model_name='listing',
            name='where',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.Venue'),
        ),
        migrations.AddField(
            model_name='listing',
            name='who',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.Proposal'),
        ),
        migrations.AddField(
            model_name='batch',
            name='festival',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='db.FestivalInfo'),
        ),
        migrations.AddField(
            model_name='batch',
            name='members',
            field=models.ManyToManyField(related_name='batches', to='db.Entity'),
        ),
    ]
